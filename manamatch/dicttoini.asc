// DictToIni Module Script

String ToIniString(this Dictionary*)
{
  String ini_string = "";
  int keycount;
  String keys[];
  
  keys = this.GetKeysAsArray();
  keycount = this.ItemCount;
  
  for(int i=0; i<keycount; i++)
  {
    String value = this.Get(keys[i]);
    ini_string = ini_string.Append(String.Format("%s=%s\n", keys[i], value));
  }
  
  return ini_string;
}

void FromIniString(this Dictionary*, String ini_string)
{
  this.Clear();
  if(String.IsNullOrEmpty(ini_string)) return;
  
  int linecount = ini_string.CountToken("\n");
  String lines[] = ini_string.Split("\n");
  
  for(int i=0; i<linecount; i++)
  {
    if(lines[i].IndexOf("=") <= -1) continue;
   
    String kv[] = lines[i].Split("=");
    if(String.IsNullOrEmpty(kv[0]) || String.IsNullOrEmpty(kv[1])) continue;

    this.Set(kv[0], kv[1]);
  }
}

void ToIniFile(this Dictionary*, String filename)
{
  if(this.ItemCount == 0) return;
  
  String filepath = "$SAVEGAMEDIR$/";
  filepath = filepath.Append(filename);
  File* file = File.Open(filepath, eFileWrite);
  
  if(file == null) return;
  
  String ini_string = this.ToIniString();
    
  file.WriteRawLine(ini_string);

  file.Close();
}

void FromIniFile(this Dictionary*, String filename)
{
  this.Clear();  
  if(String.IsNullOrEmpty(filename)) return;

  String filepath = "$SAVEGAMEDIR$/";
  filepath = filepath.Append(filename);
  File* file = File.Open(filepath, eFileRead);
  
  if(file == null) return;
  
  for(String line = ""; !file.EOF; line = file.ReadRawLineBack())
  {
    if(String.IsNullOrEmpty(line)) continue;
    if(line .IndexOf("=") <= -1) continue;
    
    String kv[] = line.Split("=");
    if(String.IsNullOrEmpty(kv[0]) || String.IsNullOrEmpty(kv[1])) continue;
    
    this.Set(kv[0], kv[1]);
  }
  
  file.Close();  
}