// new module script
#define SPR_BTN_TO_FULLSCREEN_NORMAL 41
#define SPR_BTN_TO_FULLSCREEN_OVER 71
#define SPR_BTN_TO_FULLSCREEN_PRESSED 101
#define SPR_BTN_TO_WINDOWED_NORMAL 42
#define SPR_BTN_TO_WINDOWED_OVER 72
#define SPR_BTN_TO_WINDOWED_PRESSED 102

#define SPR_BTN_MUSIC_NORMAL 29
#define SPR_BTN_MUSIC_OVER 59
#define SPR_BTN_MUSIC_PRESSED 89
#define SPR_BTN_NOMUSIC_NORMAL 43
#define SPR_BTN_NOMUSIC_OVER 73
#define SPR_BTN_NOMUSIC_PRESSED 103

#define SPR_BTN_AUDIO_NORMAL 44
#define SPR_BTN_AUDIO_OVER 74
#define SPR_BTN_AUDIO_PRESSED 104
#define SPR_BTN_NOAUDIO_NORMAL 45
#define SPR_BTN_NOAUDIO_OVER 75
#define SPR_BTN_NOAUDIO_PRESSED 105


void _AdjustWindowedButtonGraphics()
{
  if(System.Windowed) {
    btn_uifloat_windowed.NormalGraphic = SPR_BTN_TO_FULLSCREEN_NORMAL;
    btn_uifloat_windowed.MouseOverGraphic = SPR_BTN_TO_FULLSCREEN_OVER;
    btn_uifloat_windowed.PushedGraphic = SPR_BTN_TO_FULLSCREEN_PRESSED;
  } else {
    btn_uifloat_windowed.NormalGraphic = SPR_BTN_TO_WINDOWED_NORMAL;
    btn_uifloat_windowed.MouseOverGraphic = SPR_BTN_TO_WINDOWED_OVER;
    btn_uifloat_windowed.PushedGraphic = SPR_BTN_TO_WINDOWED_PRESSED;  
  }
}

void _AdjustAudioButtonGraphics()
{
  if(System.Volume != 0) {
    btn_uifloat_audio.NormalGraphic = SPR_BTN_AUDIO_NORMAL;
    btn_uifloat_audio.MouseOverGraphic = SPR_BTN_AUDIO_OVER;
    btn_uifloat_audio.PushedGraphic = SPR_BTN_AUDIO_PRESSED;
  } else {
    btn_uifloat_audio.NormalGraphic = SPR_BTN_NOAUDIO_NORMAL;
    btn_uifloat_audio.MouseOverGraphic = SPR_BTN_NOAUDIO_OVER;
    btn_uifloat_audio.PushedGraphic = SPR_BTN_NOAUDIO_PRESSED;  
  }
}

void _AdjustMusicButtonGraphics()
{
  if(!Sound_MusicGetMute()) {
    btn_uifloat_music.NormalGraphic = SPR_BTN_MUSIC_NORMAL;
    btn_uifloat_music.MouseOverGraphic = SPR_BTN_MUSIC_OVER;
    btn_uifloat_music.PushedGraphic = SPR_BTN_MUSIC_PRESSED;
  } else {
    btn_uifloat_music.NormalGraphic = SPR_BTN_NOMUSIC_NORMAL;
    btn_uifloat_music.MouseOverGraphic = SPR_BTN_NOMUSIC_OVER;
    btn_uifloat_music.PushedGraphic = SPR_BTN_NOMUSIC_PRESSED;  
  }
}

void game_start()
{
  _AdjustWindowedButtonGraphics();
  btn_uifloat_windowed.Visible = !bool_is_mobile;  
}

void _Menu_MusicToggle_Click()
{
  Sound_MusicSetMute(!Sound_MusicGetMute());
  _AdjustMusicButtonGraphics();  
}

void _Menu_AudioToggle_Click()
{
  Sound_ToggeSystemMute();
  _AdjustAudioButtonGraphics();  
}

void _Menu_Windowed_Click()
{
  System.Windowed = !System.Windowed;
  _AdjustWindowedButtonGraphics();  
}


static void Menu::OnClick(GUIControl *control, MouseButton button)
{
  if(button != eMouseLeft) return;
  
  switch(control)
  {
    case btn_uifloat_windowed: _Menu_Windowed_Click(); break;  
    case btn_uifloat_audio: _Menu_AudioToggle_Click(); break;  
    case btn_uifloat_music: _Menu_MusicToggle_Click(); break;  
  }
}